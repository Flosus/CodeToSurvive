<?xml version="1.0" encoding="UTF-8"?>
<Map xmlns="https://aheffner.de/Schema"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="https://aheffner.de/Schema https://aheffner.de/Schema/CodeToSurvive.xsd">
    <!-- The id of the map. Use the uniqueMapId for referencing instances of maps. -->
    <MapId>ExampleMap</MapId>
    <!--
    Instanced maps are not shared with other players / groups. Two independed players will get
    different instances.
    Important: The uniqueMapId and persistencePoolUniqueId of instanced maps will get random characters
    appended to differenciate between them. e.g. "ExampleMap.fdsdkfbsgfdsfds".
    -->
    <Instanced>true</Instanced>
    <!-- Persistent maps will get saved and restored, if corresponding players reenter the map.
    nonpersistent maps cease to exist after every character leafs the map. -->
    <Persistent>true</Persistent>
    <!-- A persistent pool is cleand when all corresponding maps are deserted. -->
    <PersistencePool>ExamplePool</PersistencePool>
    <!-- The description of the map. This text will get shown to the player when they look around. -->
    <Description>Example Description</Description>
    <!-- Transitions determin where a character can walk to for exiting a map. Transitions can also
    occure when performing actions. -->
    <Transitions>
        <!-- A transition defines a single point where a character can change maps. -->
        <Transition>
            <!-- The target map -->
            <TargetMapId>ExampleMap2</TargetMapId>
            <!-- A description of the transition point, visible to the player -->
            <Description>You can go here</Description>
        </Transition>
        <Transition>
            <TargetMapId>ExampleMap3</TargetMapId>
            <!-- A code handler, called for getting the description, instead of a hardcoded
            description -->
            <DescriptionHandler>ExampleMap_GateTransitionDescription</DescriptionHandler>
            <!-- A function called for checking if a transition is allowed to occure -->
            <Check>ExampleMap_TransitionCheckHandler_GateIsOpen</Check>
        </Transition>
    </Transitions>
    <!-- Trigger are optional handlers that can occure and are used for calling specific functions. -->
    <Trigger>
        <!-- Called when a character enters a map. -->
        <OnMapEnter>ExampleMap_OnMapEnter</OnMapEnter>
        <!-- Called when a character exits a map. -->
        <OnMapExit>ExampleMap_OnMapExit</OnMapExit>
        <!-- Called when a character stays on a map. -->
        <OnMapStay>ExampleMap_OnMapStay</OnMapStay>
    </Trigger>
    <!-- Points of interest are things visible to the player. -->
    <POIs>
        <!-- A single point of interest on the map -->
        <POI>
            <!-- The name of the poi. This is visible to the player -->
            <Name>Lever</Name>
            <!-- The Description of the poi -->
            <Description>A lever beside a gate</Description>
            <!-- The actions available to the player on the poi -->
            <Actions>
                <Action>
                    <!-- The internal id of the action -->
                    <ActionId>pullingTheLever</ActionId>
                    <!-- The description of the action, visible to the player -->
                    <Description>A lever near the gate. You could pull it and the gate might.</Description>
                    <!-- The name of the action, done by the player -->
                    <JobName>PullLever</JobName>
                    <!-- The function name for overwriting the default action handler -->
                    <JobHandler>ExampleMap_PullLever</JobHandler>
                    <!-- Optional parameters for the handler -->
                    <HandlerParameter>
                        <!-- Add custome parameters here. -->
                    </HandlerParameter>
                </Action>
                <Action>
                    <ActionId>lickingTheLever</ActionId>
                    <Description>You could lick the lever. Why would you do this?</Description>
                    <JobName>LickLever</JobName>
                    <JobHandler>ExampleMap_LickLever</JobHandler>
                </Action>
            </Actions>
        </POI>
        <POI>
            <Name>gate</Name>
            <!-- A custom function for providing the description -->
            <DescriptionHandler>ExampleMap_GateDescription</DescriptionHandler>
        </POI>
    </POIs>
    <!-- This contains the current state of the map and the default values -->
    <State>
        <gate>
            <Closed>true</Closed>
        </gate>
        <flowerCount>15</flowerCount>
        <fishCatchChance>5</fishCatchChance>
    </State>
</Map>